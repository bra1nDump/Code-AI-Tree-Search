{"codes": ["n = int(input())\na = list(map(int, input().split()))\nm = max(a)\na = [a[i]-m+1 for i in range(n)]\nm = a[0]\na = a[1:]\n\nvisited = [[False for i in range(m)] for j in range(n)]\n\ndef check(i, j):\n\tif visited[i][j]:\n\t\treturn False\n\tcnt = a[i][j]\n\tm = a[i][j]\n\treturn cnt == m\n\ndef solve(i, j, k):\n\tif not check(i, j):\n\t\treturn k\n\tcnt = a[i][j]\n\tm = a[i][j]\n\tx = check(i+1, j)\n\ty = check(i-1, j)\n\tz = check(i, j-1)\n\treturn cnt in {x, y, z}\n\nans = []\nfor i in range(n):\n\tfor j in range(m):\n\t\tans.append(solve(i, j, i+1))\nprint('YES')\nfor i in range(n):\n\tfor j in range(m):\n\t\tans.append(solve(i, j, j+1))\nprint(' '.join(str(x) for x in ans))\n"], "rewards": [0.0], "train rewards": [0.0], "time": [10.690431594848633], "sample times": 1}