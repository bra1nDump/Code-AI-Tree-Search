{"codes": ["import sys\n\ndef __starting_point():\n\tn, m, k = list(map(int, sys.stdin.readline().split()))\n\tif k % 2:\n\t\tm -= 1\n\t\tn -= 1\n\tr = [[r[i] for i in range(m)] for j in range(n)]\n\tc = [[c[i] for i in range(n)] for j in range(m)]\n\t\n\tvisited = [[False for i in range(m)] for j in range(n)]\n\t\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif not visited[i][j] and i > 0:\n\t\t\t\tr[i][j] = (i - 1) // 2 + 1\n\t\t\t\tc[i][j] = (n - 1) // 2 + 1\n\t\t\t\tvisited[i][j] = True\n\t\t\tif not visited[i][j] and j > 0:\n\t\t\t\tr[i][j] = (i + 1) // 2 + 1\n\t\t\t\tc[i][j] = (m - 1) // 2 + 1\n\t\t\t\tvisited[i][j] = True\n\t\t\tif not visited[i][j] and i > 0 and j > 0:\n\t\t\t\tr[i][j] = (n - 1) // 2 + 1\n\t\t\t\tc[i][j] = (m - 1) // 2 + 1\n\t\t\t\tvisited[i][j] = True\n\t\n\tres = [[1, 1], [1, 2]]\n\tfor i in range(k % 2):\n\t\tres.append([[1, 1], [1, 2]])\n\t\tres[-1][-1] = 0\n\t\n\tprint(r[0][0][0])\n\tprint(c[0][0][0])\n\t\n\n__starting_point()\n"], "rewards": [0.0], "train rewards": [0.0], "time": [14.843509197235107], "sample times": 1}