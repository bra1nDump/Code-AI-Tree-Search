{"codes": ["import sys\ninput = sys.stdin.readline\n\nn, t = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort()\nc = [0] * n\nMOD = 10 ** 9 + 7\n\ndef make_composite(a, n):\n\tdp = [[0] * (n + 1) for _ in range(n + 1)]\n\tdp[0][0] = 1\n\tfor i in range(n", "from collections import Counter\nn, t = map(int, input().split())\na = [[0] * (t + 1) for _ in range(n + 1)]\na[0][0] = 1\nfor i in range(1, n + 1):\n\tt = list(map(int, input().split()))\n\ta[i][t[0]] += 1\n\ta[i][t[1]] += 1\nans = 1\nfor i in range(1, n + 1):\n\tans *= a[i", "n, t = map(int, input().split())\na = [[0] * (t + 1) for _ in range(n + 1)]\na[0][0] = 1\ndp = [[0 for _ in range(t + 1)] for _ in range(n + 1)]\nfor i in range(1, n + 1):\n\tfor j in range(t + 1):\n\t\ta[i][j] = a[i - 1][j]\n\t\tdp[i][j] = dp[i - 1", "import collections\n\ndef count(a, b, d):\n\tl = len(a)\n\tc = collections.Counter()\n\tfor i in range(l):\n\t\tif a[i][0] == b[i][0]:\n\t\t\tc[a[i][1]] += 1\n\t\telse:\n\t\t\tc[a[i][1]] = 0\n\tc[b[0][1]] += 1\n\tr = 0\n\tfor v in list(c.values()):\n\t\tif v", "import math\nimport collections\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n\tn, t = list(map(int, input().split()))\n\tX = [[] for _ in range(n)]\n\tY = [[] for _ in range(n)]\n\n\tfor _ in range(n):\n\t\tt, g = list(map(int, input().split()))\n\t\tX[t-1].append(g)\n\t\tY[g-1].append(t-1)\n\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn,t = mints()\n\ta = list(mints())\n\ta.sort()\n\tdp = [0]*t\n\tdp[0] = 1\n\tc = 0\n\tmod = 10**9+7\n\tfor i in range("], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [82.14968013763428, 154.81251883506775, 225.96891379356384, 296.23224806785583, 367.52449798583984, 453.9865369796753], "sample times": 6}