{
    "codes": [
        "\n\ndef main():\n    n, t = map(int, input().split())\n    songs = []\n    for _ in range(n):\n        songs.append(tuple(map(int, input().split())))\n    # print(songs)\n    # print(t)\n\n    # dp[i][j] = number of ways to create a playlist of length j using songs 0 to i\n    # dp[i][j] = sum(dp[i-1][j-k]) for k in range(t_i, j+1) if g_i != g_(i-1)\n    # dp[i][j] = sum(dp[i-1][j-k]) for k in range(t_i, j+1) if g_i == g_(i-1) and j-k != t_(i-1)\n    # dp[i][j] = 0 if j < t_i\n\n    dp = [[0 for _ in range(t+1)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(1, n):\n        t_i, g_i = songs[i]\n        for j in range(t+1):\n            if j < t_i:\n                dp[i][j] = 0\n            else:\n                t_prev, g_prev = songs[i-1]\n                if g_i != g_prev:\n                    dp[i][j] = sum(dp[i-1][j-k] for k in range(t_i, j+1))\n                else:\n                    dp[i][j] = sum(dp[i-1][j-k] for k in range(t_i, j+1) if k != t_prev)\n    # print(dp)\n    print(dp[n-1][t])\n\n\nif True:\n    main()"
    ],
    "rewards": [
        0.10909090909090909
    ],
    "train rewards": [
        0.12962962962962962
    ],
    "time": 9.768350839614868,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ]
}