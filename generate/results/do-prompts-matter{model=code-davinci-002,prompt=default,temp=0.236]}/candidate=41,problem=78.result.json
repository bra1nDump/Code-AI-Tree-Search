{
    "codes": [
        "\nimport sys\nimport math\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n    songs = sorted(songs, key=lambda x: x[0])\n    dp = [[0 for _ in range(T+1)] for _ in range(n)]\n    MOD = 10**9 + 7\n    for i in range(n):\n        for j in range(T+1):\n            if i == 0:\n                if j >= songs[i][0]:\n                    dp[i][j] = 1\n            else:\n                if j >= songs[i][0]:\n                    dp[i][j] = dp[i-1][j] + dp[i-1][j-songs[i][0]]\n                    if songs[i][1] == songs[i-1][1]:\n                        dp[i][j] -= dp[i-2][j-songs[i][0]]\n                else:\n                    dp[i][j] = dp[i-1][j]\n            dp[i][j] %= MOD\n    print(dp[n-1][T])\n\nif True:\n    main()"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.2222222222222222
    ],
    "time": 9.630435705184937,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false
        ]
    ]
}