{
    "codes": [
        "\nimport sys\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    # Read the input\n    n, t = map(int, input().split())\n    songs = []\n    for _ in range(n):\n        songs.append(tuple(map(int, input().split())))\n\n    # Create the DP table\n    dp = [[[0 for _ in range(t+1)] for _ in range(4)] for _ in range(n+1)]\n\n    # Initialize the DP table\n    for i in range(1, n+1):\n        dp[i][0][0] = 1\n\n    # Populate the DP table\n    for i in range(1, n+1):\n        for j in range(1, 4):\n            for k in range(1, t+1):\n                if k >= songs[i-1][0] and j != songs[i-1][1]:\n                    dp[i][j][k] = dp[i-1][j][k] + dp[i-1][songs[i-1][1]][k-songs[i-1][0]]\n                else:\n                    dp[i][j][k] = dp[i-1][j][k]\n\n    # Print the answer\n    print(dp[n][0][t])\n\nif True:\n    main()"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 7.265322923660278,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}