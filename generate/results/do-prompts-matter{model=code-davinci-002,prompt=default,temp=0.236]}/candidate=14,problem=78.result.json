{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(tuple(map(int, sys.stdin.readline().split())))\n    songs.sort()\n    songs = tuple(songs)\n    print(solve(songs, T))\n\ndef solve(songs, T):\n    \"\"\"\n    >>> solve(((1, 1), (1, 2), (1, 3)), 3)\n    6\n    >>> solve(((1, 1), (1, 1), (1, 3)), 3)\n    2\n    >>> solve(((5, 3), (2, 1), (3, 2), (5, 1)), 10)\n    10\n    \"\"\"\n    MOD = 10**9 + 7\n    cache = {}\n    def count_playlists(songs, T):\n        if (songs, T) in cache:\n            return cache[(songs, T)]\n        if T == 0:\n            return 1\n        if not songs:\n            return 0\n        if T < 0:\n            return 0\n        result = 0\n        for i in range(len(songs)):\n            if i > 0 and songs[i][1] == songs[i-1][1]:\n                continue\n            result += count_playlists(songs[:i] + songs[i+1:], T - songs[i][0])\n            result %= MOD\n        cache[(songs, T)] = result\n        return result\n    return count_playlists(songs, T)\n\nif True:\n    main()"
    ],
    "rewards": [
        0.4
    ],
    "train rewards": [
        0.5555555555555556
    ],
    "time": 7.239012002944946,
    "sample times": 2,
    "test_rewards": [
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            false
        ]
    ]
}