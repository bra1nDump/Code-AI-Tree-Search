{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n    # print(songs)\n    # print(n, T)\n    # print(songs)\n    # print(songs[0][0])\n    # print(songs[1][0])\n    # print(songs[2][0])\n    # print(songs[3][0])\n    # print(songs[0][1])\n    # print(songs[1][1])\n    # print(songs[2][1])\n    # print(songs[3][1])\n\n    # dp[i][j] = number of ways to make a playlist of length j with songs 0..i\n    # dp[i][j] = sum(dp[i-1][j-k]) for k in range(songs[i][0], T+1) if songs[i][1] != songs[i-1][1]\n    dp = [[0 for j in range(T+1)] for i in range(n)]\n    # print(dp)\n\n    # base case\n    for i in range(songs[0][0], T+1):\n        dp[0][i] = 1\n    # print(dp)\n\n    # recursive case\n    for i in range(1, n):\n        for j in range(1, T+1):\n            for k in range(songs[i][0], T+1):\n                if songs[i][1] != songs[i-1][1]:\n                    dp[i][j] += dp[i-1][j-k]\n    # print(dp)\n\n    print(dp[n-1][T])\n\nif True:\n    main()"
    ],
    "rewards": [
        0.2545454545454545
    ],
    "train rewards": [
        0.3148148148148148
    ],
    "time": 7.938288927078247,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}