{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = [int(x) for x in sys.stdin.readline().split()]\n    songs = []\n    for i in range(n):\n        songs.append([int(x) for x in sys.stdin.readline().split()])\n    songs.sort()\n\n    # dp[i][j][k] = number of ways to make a playlist of length j using songs i, i+1, ..., n-1\n    # where k is the genre of the last song in the playlist\n    dp = [[[0 for k in range(4)] for j in range(T+1)] for i in range(n)]\n\n    # base case: dp[n-1][j][k] = 1 if j = t_n-1 and k = g_n-1, else 0\n    for j in range(T+1):\n        for k in range(4):\n            if j == songs[n-1][0] and k == songs[n-1][1]:\n                dp[n-1][j][k] = 1\n            else:\n                dp[n-1][j][k] = 0\n\n    # dp[i][j][k] = sum(dp[i+1][j-t_i][g_i]) for all g_i != k\n    for i in range(n-2, -1, -1):\n        for j in range(T+1):\n            for k in range(4):\n                if j >= songs[i][0]:\n                    for g in range(1, 4):\n                        if g != k:\n                            dp[i][j][k] += dp[i+1][j-songs[i][0]][g]\n                else:\n                    dp[i][j][k] = 0\n\n    # sum(dp[0][T][k]) for all k\n    ans = 0\n    for k in range(4):\n        ans += dp[0][T][k]\n\n    print(ans)\n\nif True:\n    main()"
    ],
    "rewards": [
        0.4
    ],
    "train rewards": [
        0.4444444444444444
    ],
    "time": 10.48282527923584,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false
        ]
    ]
}