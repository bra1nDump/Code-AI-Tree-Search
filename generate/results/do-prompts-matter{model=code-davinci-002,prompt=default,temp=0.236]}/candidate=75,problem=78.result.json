{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n    print(solve(n, T, songs))\n\ndef solve(n, T, songs):\n    # dp[i][j] = number of ways to create a playlist of length i using songs 1..j\n    # dp[i][j] = sum(dp[i-t][k]) for k in range(j) if songs[k][1] != songs[j][1]\n    # dp[i][j] = 0 if i < 0 or i < songs[j][0]\n    # dp[i][j] = 1 if i == songs[j][0]\n    # dp[0][j] = 1 for all j\n    # dp[i][0] = 0 for all i > songs[0][0]\n    # dp[i][0] = 1 for all i <= songs[0][0]\n    # dp[i][j] = dp[i][j-1] + dp[i-songs[j][0]][j-1] - dp[i-songs[j][0]-1][j-1]\n    # dp[i][j] = dp[i][j-1] + dp[i-songs[j][0]][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] if i < songs[j][0]\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = 0 if i < 0\n    # dp[i][j] = dp[i][j-1] if i >= 0\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = 0 if i < 0\n    # dp[i][j] = dp[i][j-1] if i >= 0\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] if i < songs[j][0]\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] if i < songs[j][0]\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] if i < songs[j][0]\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] - dp[i-songs[j][0]-1][j-1] if i >= songs[j][0]\n    # dp[i][j] = dp[i][j-1] if i < songs[j][0]"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.0
    ],
    "time": 23.109019994735718,
    "sample times": 2,
    "test_rewards": [
        []
    ],
    "train_rewards": [
        []
    ]
}