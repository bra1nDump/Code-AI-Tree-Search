{
    "codes": [
        "\n# Solution\n\n# This solution is based on dynamic programming.\n# Let's define $dp[i][j]$ as the number of different sequences of songs, the total length of exactly $i$ minutes, such that there are no two consecutive songs of the same genre in them and all the songs in the playlist are different.\n# Then, we can write the following recurrence relation:\n# $dp[i][j] = \\sum_{k=1}^n dp[i - t_k][j - g_k]$\n# where $t_k$ and $g_k$ are the duration and genre of the $k$-th song, respectively.\n# The base case is $dp[0][0] = 1$.\n# The answer is $dp[T][3]$.\n\n# Implementation\n\n# The following implementation is based on the above recurrence relation.\n# The time complexity is $O(nT)$.\n# The space complexity is $O(nT)$.\n\n#!/usr/bin/env python3\n\ndef solve(n, T, t, g):\n    dp = [[0] * (3 + 1) for _ in range(T + 1)]\n    dp[0][0] = 1\n    for i in range(1, T + 1):\n        for j in range(1, 3 + 1):\n            for k in range(n):\n                if i >= t[k] and j >= g[k]:\n                    dp[i][j] += dp[i - t[k]][j - g[k]]\n    return dp[T][3]\n\ndef main():\n    n, T = map(int, input().split())\n    t = []\n    g = []\n    for _ in range(n):\n        ti, gi = map(int, input().split())\n        t.append(ti)\n        g.append(gi)\n    print(solve(n, T, t, g))\n\nif True:\n    main()"
    ],
    "rewards": [
        0.45454545454545453
    ],
    "train rewards": [
        0.4444444444444444
    ],
    "time": 7.22250509262085,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}