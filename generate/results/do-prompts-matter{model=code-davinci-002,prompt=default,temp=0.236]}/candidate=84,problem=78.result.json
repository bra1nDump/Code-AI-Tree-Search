{
    "codes": [
        "\n# SOLUTION\n# The problem is to find the number of ways to arrange the songs such that there are no two consecutive songs of the same genre.\n# This is a dynamic programming problem.\n# Let dp[i][j] be the number of ways to arrange the songs such that the last song is of genre j and the total duration is i.\n# Then, dp[i][j] = sum(dp[i - t_k][k]) for all k != j.\n# The answer is sum(dp[T][j]) for all j.\n\nMOD = 10**9 + 7\n\ndef solve(n, T, t, g):\n    dp = [[0] * 4 for _ in range(T + 1)]\n    for i in range(1, T + 1):\n        for j in range(1, 4):\n            for k in range(1, n + 1):\n                if g[k] != j and i >= t[k]:\n                    dp[i][j] += dp[i - t[k]][g[k]]\n                    dp[i][j] %= MOD\n    return sum(dp[T]) % MOD\n\nif True:\n    n, T = map(int, input().split())\n    t = [0]\n    g = [0]\n    for _ in range(n):\n        t_i, g_i = map(int, input().split())\n        t.append(t_i)\n        g.append(g_i)\n    print(solve(n, T, t, g))"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 6.133884906768799,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}