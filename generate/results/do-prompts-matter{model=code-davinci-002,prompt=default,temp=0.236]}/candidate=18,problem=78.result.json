{
    "codes": [
        "\n# Solution\n\n# Python 3 program to count number of \n# sequences of songs such that there \n# are no two consecutive songs of \n# same genre and total duration is T \n\n# Number of songs \nn = 3\n\n# Total duration \nT = 3\n\n# Genre of ith song \ngenre = [1, 2, 3]\n\n# Duration of ith song \nduration = [1, 1, 1]\n\n# dp[i][j] stores count of sequences \n# of songs such that there are no two \n# consecutive songs of same genre and \n# total duration is j \ndp = [[0 for i in range(T + 1)] \n\t\tfor i in range(n + 1)] \n\n# Initializing dp[i][0] \nfor i in range(n + 1): \n\tdp[i][0] = 1\n\n# Initializing dp[0][j] \nfor j in range(1, T + 1): \n\tdp[0][j] = 0\n\n# Filling dp[i][j] \nfor i in range(1, n + 1): \n\tfor j in range(1, T + 1): \n\t\t\n\t\t# If duration of current song is \n\t\t# greater than j, then we cannot \n\t\t# include ith song \n\t\tif (duration[i - 1] > j): \n\t\t\tdp[i][j] = dp[i - 1][j] \n\t\t\n\t\t# If duration of current song is \n\t\t# less than or equal to j, then \n\t\t# we have two options: \n\t\t# 1) We include ith song in the \n\t\t# sequence \n\t\t# 2) We don't include ith song \n\t\t# in the sequence \n\t\telse: \n\t\t\t\n\t\t\t# If we include ith song, then \n\t\t\t# we have to find sequences of \n\t\t\t# length j - duration[i - 1] \n\t\t\t# and we can't have two \n\t\t\t# consecutive songs of same \n\t\t\t# genre \n\t\t\tinclude = dp[i - 1][j - duration[i - 1]] \n\t\t\t\n\t\t\t# If we don't include ith song, \n\t\t\t# then we have to find sequences \n\t\t\t# of length j and we can't have \n\t\t\t# two consecutive songs of same \n\t\t\t# genre \n\t\t\texclude = dp[i - 1][j] \n\t\t\t\n\t\t\t# If ith song has same genre as \n\t\t\t# (i - 1)th song, then we have \n\t\t\t# to subtract all the sequences \n\t\t\t# which have (i - 1)th song as \n\t\t\t# part of them \n\t\t\tif (genre[i - 1] == genre[i - 2]): \n\t\t\t\texclude -= dp[i - 2][j] \n\t\t\t\n\t\t\t# Adding the two cases \n\t\t\tdp[i][j] = include + exclude \n\n# Result will be stored in dp[n][T] \nprint(dp[n][T]) \n\n# This code is contributed by \n# Surendra_Gangwar"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.1111111111111111
    ],
    "time": 14.334156036376953,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ]
}