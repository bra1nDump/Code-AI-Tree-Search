{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n    songs.sort()\n    print(songs)\n    # dp[i][j] = number of ways to get to time j using songs 0 to i\n    # dp[i][j] = dp[i-1][j] + dp[i-1][j-t_i]\n    # dp[i][j] = dp[i-1][j] + dp[i-1][j-t_i] - dp[i-1][j-t_i-1]\n    # dp[i][j] = dp[i-1][j] + dp[i-1][j-t_i] - dp[i-1][j-t_i-1]\n    # dp[i][j] = dp[i-1][j] + dp[i-1][j-t_i] - dp[i-1][j-t_i-1]\n    dp = [[0 for j in range(T+1)] for i in range(n)]\n    dp[0][0] = 1\n    for i in range(1, n):\n        for j in range(T+1):\n            dp[i][j] = dp[i-1][j]\n            if j >= songs[i][0]:\n                dp[i][j] += dp[i-1][j-songs[i][0]]\n                if j >= songs[i][0]+1:\n                    dp[i][j] -= dp[i-1][j-songs[i][0]-1]\n    print(dp)\n    print(dp[n-1][T])\n\nif True:\n    main()"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.0
    ],
    "time": 8.408889055252075,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ]
}