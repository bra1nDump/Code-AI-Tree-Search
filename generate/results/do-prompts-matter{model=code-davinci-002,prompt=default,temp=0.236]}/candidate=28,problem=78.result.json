{
    "codes": [
        "\n# Solution\n\n# This solution is based on dynamic programming.\n# The idea is to use a 3D array dp[i][j][k] where i is the index of the song, j is the time left and k is the last genre played.\n# dp[i][j][k] is the number of ways to play the first i songs with j time left and k as the last genre played.\n# The base case is dp[0][T][0] = 1.\n# The recurrence relation is dp[i][j][k] = sum(dp[i-1][j-t_i][g_i]) for all i, j, k.\n# The answer is dp[n][0][0].\n\n# This solution is O(n*T*3) = O(n*T) in time and O(n*T*3) = O(n*T) in space.\n\nMOD = 10**9 + 7\n\nn, T = map(int, input().split())\n\nt = []\ng = []\n\nfor i in range(n):\n    t_i, g_i = map(int, input().split())\n    t.append(t_i)\n    g.append(g_i)\n\ndp = [[[0 for k in range(4)] for j in range(T+1)] for i in range(n+1)]\n\ndp[0][T][0] = 1\n\nfor i in range(1, n+1):\n    for j in range(T+1):\n        for k in range(1, 4):\n            if j >= t[i-1]:\n                dp[i][j][k] = dp[i-1][j-t[i-1]][g[i-1]]\n            if k != g[i-1]:\n                dp[i][j][k] += dp[i-1][j][k]\n            dp[i][j][k] %= MOD\n\nprint(dp[n][0][0])"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 8.7173011302948,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}