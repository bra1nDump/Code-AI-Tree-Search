{
    "codes": [
        "\n# Solution 1\n#\n# def solve(n, T, songs):\n#     \"\"\"\n#     n: number of songs\n#     T: total duration\n#     songs: list of tuples (duration, genre)\n#     \"\"\"\n#     # dp[i][j] = number of playlists of length i with total duration j\n#     dp = [[0 for _ in range(T + 1)] for _ in range(n + 1)]\n#     dp[0][0] = 1\n#     for i in range(1, n + 1):\n#         for j in range(T + 1):\n#             for k in range(j + 1):\n#                 if songs[i - 1][0] == k:\n#                     dp[i][j] += dp[i - 1][j - k]\n#     return dp[n][T]\n#\n#\n# def main():\n#     n, T = map(int, input().split())\n#     songs = []\n#     for _ in range(n):\n#         songs.append(tuple(map(int, input().split())))\n#     print(solve(n, T, songs))\n#\n#\n# if True:\n#     main()\n\n# Solution 2\n#\n# def solve(n, T, songs):\n#     \"\"\"\n#     n: number of songs\n#     T: total duration\n#     songs: list of tuples (duration, genre)\n#     \"\"\"\n#     # dp[i][j] = number of playlists of length i with total duration j\n#     dp = [[0 for _ in range(T + 1)] for _ in range(n + 1)]\n#     dp[0][0] = 1\n#     for i in range(1, n + 1):\n#         for j in range(T + 1):\n#             for k in range(j + 1):\n#                 if songs[i - 1][0] == k:\n#                     dp[i][j] += dp[i - 1][j - k]\n#     return dp[n][T]\n#\n#\n# def main():\n#     n, T = map(int, input().split())\n#     songs = []\n#     for _ in range(n):\n#         songs.append(tuple(map(int, input().split())))\n#     print(solve(n, T, songs))\n#\n#\n# if True:\n#     main()\n\n# Solution 3\n#\n# def solve(n, T, songs):\n#     \"\"\"\n#     n: number of songs\n#     T: total duration\n#     songs: list of tuples (duration, genre)\n#     \"\"\"\n#     # dp[i][j] = number of playlists of length i with total duration j\n#     dp = [[0 for _ in range(T + 1)] for _ in range(n + 1)]\n#     dp[0][0] = 1\n#     for i in range(1, n + 1):\n#         for j in range(T + 1):\n#             for k in range(j + 1):\n#                 if songs[i - 1][0] == k:\n#                     dp[i][j] += dp[i - 1][j - k]\n#     return dp[n][T]\n#\n#\n# def main():\n#     n, T = map(int, input().split())\n#     songs = []\n#     for _ in range(n):\n#         songs.append(tuple(map(int, input().split())))\n#     print(solve(n, T, songs))\n#\n#\n# if True:\n#     main()\n\n# Solution 4\n#\n# def solve(n, T, songs):\n#     \"\"\"\n#     n: number of songs\n#     T: total duration\n#     songs: list of tuples (duration, genre)\n#     \"\"\"\n#     # dp[i][j] = number of playlists of length i with total duration j\n#     dp = [[0 for _ in range(T + 1)] for _ in range(n + 1)]\n#     dp[0][0] = 1\n#     for i in range(1, n + 1):\n#         for j in"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.0
    ],
    "time": 16.98579502105713,
    "sample times": 2,
    "test_rewards": [
        []
    ],
    "train_rewards": [
        []
    ]
}