{
    "codes": [
        "\nimport sys\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n, T = read_ints()\n    songs = []\n    for _ in range(n):\n        songs.append(read_ints())\n    # print(songs)\n\n    # dp[i][j] is the number of ways to play songs of total length j using the first i songs\n    dp = [[0 for j in range(T+1)] for i in range(n+1)]\n    dp[0][0] = 1\n\n    for i in range(1, n+1):\n        for j in range(T+1):\n            dp[i][j] = dp[i-1][j]\n            if j >= songs[i-1][0]:\n                dp[i][j] += dp[i-1][j-songs[i-1][0]]\n\n    # print(dp)\n\n    # dp2[i][j] is the number of ways to play songs of total length j using the first i songs\n    # such that the last two songs are not of the same genre\n    dp2 = [[0 for j in range(T+1)] for i in range(n+1)]\n    dp2[0][0] = 1\n\n    for i in range(1, n+1):\n        for j in range(T+1):\n            dp2[i][j] = dp2[i-1][j]\n            if j >= songs[i-1][0]:\n                dp2[i][j] += dp2[i-1][j-songs[i-1][0]]\n                if i >= 2 and songs[i-1][1] != songs[i-2][1]:\n                    dp2[i][j] += dp2[i-2][j-songs[i-1][0]]\n\n    # print(dp2)\n\n    ans = dp2[n][T]\n    for i in range(n):\n        ans -= dp2[i][T]\n    print(ans)\n\nif True:\n    main()"
    ],
    "rewards": [
        0.36363636363636365
    ],
    "train rewards": [
        0.42592592592592593
    ],
    "time": 9.032023906707764,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false
        ]
    ]
}