{
    "codes": [
        "\ndef main():\n    n, T = map(int, input().split())\n    songs = []\n    for i in range(n):\n        t, g = map(int, input().split())\n        songs.append((t, g))\n    print(solve(n, T, songs))\n\ndef solve(n, T, songs):\n    # dp[i][j][k] = number of ways to make a playlist of length i with last song of genre j and last song of length k\n    dp = [[[0 for k in range(T + 1)] for j in range(4)] for i in range(T + 1)]\n    dp[0][0][0] = 1\n    for i in range(1, T + 1):\n        for j in range(4):\n            for k in range(T + 1):\n                if dp[i - 1][j][k] > 0:\n                    for song in songs:\n                        if song[0] <= i and song[1] != j:\n                            dp[i][song[1]][song[0]] += dp[i - 1][j][k]\n    return sum(dp[T][j][k] for j in range(4) for k in range(T + 1)) % (10 ** 9 + 7)\n\nif True:\n    main()"
    ],
    "rewards": [
        0.2727272727272727
    ],
    "train rewards": [
        0.5555555555555556
    ],
    "time": 5.03603982925415,
    "sample times": 2,
    "test_rewards": [
        [
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ]
}