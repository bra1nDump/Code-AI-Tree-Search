{
    "codes": [
        "\nimport sys\n\ndef solve(n, T, songs):\n    # dp[i][j][k] = number of ways to make a playlist of length i ending with song j and genre k\n    dp = [[[0 for _ in range(4)] for _ in range(n+1)] for _ in range(T+1)]\n    dp[0][0][0] = 1\n    for i in range(1, T+1):\n        for j in range(1, n+1):\n            for k in range(1, 4):\n                if songs[j-1][0] <= i:\n                    dp[i][j][k] = dp[i-songs[j-1][0]][j-1][k]\n                    if songs[j-1][1] != k:\n                        dp[i][j][k] += dp[i-songs[j-1][0]][j-1][songs[j-1][1]]\n    return sum(dp[T][n]) % 1000000007\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for _ in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n    print(solve(n, T, songs))\n\nif True:\n    main()"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 5.505335092544556,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}