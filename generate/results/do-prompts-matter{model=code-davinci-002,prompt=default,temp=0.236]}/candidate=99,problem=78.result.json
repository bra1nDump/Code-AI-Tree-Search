{
    "codes": [
        "\nimport sys\n\ndef main():\n    # read input\n    n, T = [int(x) for x in sys.stdin.readline().split()]\n    songs = []\n    for i in range(n):\n        songs.append([int(x) for x in sys.stdin.readline().split()])\n    #print(songs)\n    #print(n, T)\n\n    # create a list of all possible playlists\n    playlists = []\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i != j and i != k and j != k:\n                    playlists.append([i, j, k])\n    #print(playlists)\n\n    # create a list of all possible playlists with the correct total duration\n    valid_playlists = []\n    for playlist in playlists:\n        if sum([songs[playlist[i]][0] for i in range(3)]) == T:\n            valid_playlists.append(playlist)\n    #print(valid_playlists)\n\n    # create a list of all possible playlists with the correct total duration and no repeated songs\n    valid_playlists_no_repeats = []\n    for playlist in valid_playlists:\n        if len(playlist) == len(set(playlist)):\n            valid_playlists_no_repeats.append(playlist)\n    #print(valid_playlists_no_repeats)\n\n    # create a list of all possible playlists with the correct total duration, no repeated songs, and no two consecutive songs of the same genre\n    valid_playlists_no_repeats_no_consecutive_genres = []\n    for playlist in valid_playlists_no_repeats:\n        if songs[playlist[0]][1] != songs[playlist[1]][1] and songs[playlist[1]][1] != songs[playlist[2]][1]:\n            valid_playlists_no_repeats_no_consecutive_genres.append(playlist)\n    #print(valid_playlists_no_repeats_no_consecutive_genres)\n\n    # output the number of valid playlists\n    print(len(valid_playlists_no_repeats_no_consecutive_genres))\n\nif True:\n    main()"
    ],
    "rewards": [
        0.45454545454545453
    ],
    "train rewards": [
        0.48148148148148145
    ],
    "time": 11.189396381378174,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            true,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}