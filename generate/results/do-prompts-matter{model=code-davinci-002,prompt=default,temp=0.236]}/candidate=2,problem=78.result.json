{
    "codes": [
        "\nimport sys\n\ndef main():\n    # Read the input\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n\n    # Create a list of songs for each genre\n    songs_by_genre = [[] for i in range(3)]\n    for i in range(n):\n        songs_by_genre[songs[i][1] - 1].append(songs[i][0])\n\n    # Create a list of all possible playlists\n    playlists = []\n    for i in range(3):\n        playlists.append(create_playlists(songs_by_genre[i], T))\n\n    # Count the number of different playlists\n    count = 0\n    for i in range(len(playlists[0])):\n        for j in range(len(playlists[1])):\n            for k in range(len(playlists[2])):\n                if len(playlists[0][i]) + len(playlists[1][j]) + len(playlists[2][k]) == T:\n                    count += 1\n\n    # Print the result\n    print(count)\n\ndef create_playlists(songs, T):\n    \"\"\"\n    Creates a list of all possible playlists of songs with a total duration of T.\n    \"\"\"\n    playlists = []\n    for i in range(len(songs)):\n        if songs[i] == T:\n            playlists.append([i])\n        elif songs[i] < T:\n            for playlist in create_playlists(songs[i + 1:], T - songs[i]):\n                playlists.append([i] + playlist)\n    return playlists\n\nif True:\n    main()"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 7.337573766708374,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}