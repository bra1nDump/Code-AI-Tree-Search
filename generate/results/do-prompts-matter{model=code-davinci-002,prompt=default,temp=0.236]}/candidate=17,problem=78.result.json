{
    "codes": [
        "\n# Solution\n\ndef get_number_of_playlists(n, T, songs):\n    \"\"\"\n    >>> get_number_of_playlists(3, 3, [(1, 1), (1, 2), (1, 3)])\n    6\n    >>> get_number_of_playlists(3, 3, [(1, 1), (1, 1), (1, 3)])\n    2\n    >>> get_number_of_playlists(4, 10, [(5, 3), (2, 1), (3, 2), (5, 1)])\n    10\n    \"\"\"\n    MOD = 10**9 + 7\n    dp = [[[0 for _ in range(T + 1)] for _ in range(n + 1)] for _ in range(4)]\n    dp[0][0][0] = 1\n    for i in range(1, n + 1):\n        for j in range(1, T + 1):\n            for k in range(1, 4):\n                if j - songs[i - 1][0] >= 0:\n                    dp[k][i][j] = dp[k][i - 1][j] + dp[k - 1][i - 1][j - songs[i - 1][0]]\n                else:\n                    dp[k][i][j] = dp[k][i - 1][j]\n    return dp[3][n][T] % MOD\n\n\nif True:\n    n, T = map(int, input().split())\n    songs = []\n    for _ in range(n):\n        songs.append(tuple(map(int, input().split())))\n    print(get_number_of_playlists(n, T, songs))"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 7.69864821434021,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}