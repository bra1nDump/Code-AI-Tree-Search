{"codes": ["\n\ndef solve(n, t, songs):\n    dp = [[0 for _ in range(t + 1)] for _ in range(n)]\n\n    for i in range(n):\n        for j in range(t + 1):\n            if j == 0:\n                dp[i][j] = 1\n            elif i == 0:\n                if j == songs[i][0]:\n                    dp[i][j] = 1\n            else:\n                if j >= songs[i][0]:\n                    dp[i][j] = dp[i - 1][j] + dp[i - 1][j - songs[i][0]]\n                else:\n                    dp[i][j] = dp[i - 1][j]\n\n    # print(dp)\n    return dp[n - 1][t] % (10 ** 9 + 7)\n\n\ndef main():\n    n, t = map(int, input().split())\n    songs = []\n    for _ in range(n):\n        songs.append(tuple(map(int, input().split())))\n    print(solve(n, t, songs))\n\n\nif True:\n    main()"], "rewards": [0.45454545454545453], "train rewards": [0.5925925925925926], "time": [], "sample times": 1, "test_rewards": [[true, true, false, true, false, false, false, true, false, false, false, false, false, false, true, false, false, true, true, true, false, true, false, true, false, false, true, true, true, true, true, false, true, true, true, true, true, false, false, true, false, true, true, true, false, false, false, false, false, false, false, false, false, false, true]], "train_rewards": [[false, false, false, true, true, true, true, true, true, true, true, false, false, true, true, true, true, true, false, true, true, false, true, true, true, true, false, true, true, false, false, true, true, false, false, true, true, true, true, true, true, false, false, true, false, false, false, false, false, false, true, false, false, true]]}