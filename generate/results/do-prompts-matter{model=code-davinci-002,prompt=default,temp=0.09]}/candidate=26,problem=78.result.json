{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n\n    # dp[i][j] = number of ways to make a playlist of length j using the first i songs\n    dp = [[0 for j in range(T+1)] for i in range(n+1)]\n    dp[0][0] = 1\n\n    for i in range(1, n+1):\n        for j in range(T+1):\n            # if we can't use the ith song, then the number of ways to make a playlist of length j is the same as the number of ways to make a playlist of length j using the first i-1 songs\n            if j < songs[i-1][0]:\n                dp[i][j] = dp[i-1][j]\n            # if we can use the ith song, then the number of ways to make a playlist of length j is the sum of the number of ways to make a playlist of length j using the first i-1 songs and the number of ways to make a playlist of length j-t_i using the first i-1 songs\n            else:\n                dp[i][j] = dp[i-1][j] + dp[i-1][j-songs[i-1][0]]\n\n    # print(dp)\n\n    # dp2[i][j] = number of ways to make a playlist of length j using the first i songs such that the last two songs are not of the same genre\n    dp2 = [[0 for j in range(T+1)] for i in range(n+1)]\n    dp2[0][0] = 1\n\n    for i in range(1, n+1):\n        for j in range(T+1):\n            # if we can't use the ith song, then the number of ways to make a playlist of length j such that the last two songs are not of the same genre is the same as the number of ways to make a playlist of length j using the first i-1 songs such that the last two songs are not of the same genre\n            if j < songs[i-1][0]:\n                dp2[i][j] = dp2[i-1][j]\n            # if we can use the ith song, then the number of ways to make a playlist of length j such that the last two songs are not of the same genre is the sum of the number of ways to make a playlist of length j using the first i-1 songs such that the last two songs are not of the same genre and the number of ways to make a playlist of length j-t_i using the first i-1 songs such that the last two songs are not of the same genre\n            else:\n                dp2[i][j] = dp2[i-1][j] + dp2[i-1][j-songs[i-1][0]]\n\n    # print(dp2)\n\n    # dp3[i][j] = number of ways to make a playlist of length j using the first i songs such that the last two songs are not of the same genre and the last song is not the same as the first song\n    dp3 = [[0 for j in range(T+1)] for i in range(n+1)]\n    dp3[0][0] = 1\n\n    for i in range(1, n+1):\n        for j in range(T+1):\n            # if we can't use the ith song, then the number of ways to make a playlist of length j such that the last two songs are not of the same genre and the last song is not the same as the first song is the same as the number of ways to make a playlist of length j using the first i-1 songs such that the last two songs are not of the same genre and the last song is not the same as the first song\n            if j < songs[i-1][0]:\n                dp3[i][j] = dp3[i-1][j]\n            # if we can use the ith song, then the number of ways to make a playlist of length j such that the last two songs are not of the same genre and the last song is not the same as the first song is the sum of the number of ways to make a playlist of length j using the first i-1"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.0
    ],
    "time": 23.638786792755127,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ]
}