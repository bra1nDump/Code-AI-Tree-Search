{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n    # print(songs)\n    # print(n, T)\n    # print(songs)\n    # print(songs[0][0])\n    # print(songs[0][1])\n    # print(songs[1][0])\n    # print(songs[1][1])\n    # print(songs[2][0])\n    # print(songs[2][1])\n    # print(songs[3][0])\n    # print(songs[3][1])\n    # print(songs[4][0])\n    # print(songs[4][1])\n    # print(songs[5][0])\n    # print(songs[5][1])\n    # print(songs[6][0])\n    # print(songs[6][1])\n    # print(songs[7][0])\n    # print(songs[7][1])\n    # print(songs[8][0])\n    # print(songs[8][1])\n    # print(songs[9][0])\n    # print(songs[9][1])\n    # print(songs[10][0])\n    # print(songs[10][1])\n    # print(songs[11][0])\n    # print(songs[11][1])\n    # print(songs[12][0])\n    # print(songs[12][1])\n    # print(songs[13][0])\n    # print(songs[13][1])\n    # print(songs[14][0])\n    # print(songs[14][1])\n    # print(songs[15][0])\n    # print(songs[15][1])\n    # print(songs[16][0])\n    # print(songs[16][1])\n    # print(songs[17][0])\n    # print(songs[17][1])\n    # print(songs[18][0])\n    # print(songs[18][1])\n    # print(songs[19][0])\n    # print(songs[19][1])\n    # print(songs[20][0])\n    # print(songs[20][1])\n    # print(songs[21][0])\n    # print(songs[21][1])\n    # print(songs[22][0])\n    # print(songs[22][1])\n    # print(songs[23][0])\n    # print(songs[23][1])\n    # print(songs[24][0])\n    # print(songs[24][1])\n    # print(songs[25][0])\n    # print(songs[25][1])\n    # print(songs[26][0])\n    # print(songs[26][1])\n    # print(songs[27][0])\n    # print(songs[27][1])\n    # print(songs[28][0])\n    # print(songs[28][1])\n    # print(songs[29][0])\n    # print(songs[29][1])\n    # print(songs[30][0])\n    # print(songs[30][1])\n    # print(songs[31][0])\n    # print(songs[31][1])\n    # print(songs[32][0])\n    # print(songs[32][1])\n    # print(songs[33][0])\n    # print(songs[33][1])\n    # print(songs[34][0])\n    # print(songs[34][1])\n    # print(songs[35][0])\n    # print(songs[35][1])\n    # print(songs[36][0])\n    # print(songs[36][1])\n    # print(songs[37][0])\n    # print(songs[37][1])\n    # print(songs[38][0])\n    # print(songs[38"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.0
    ],
    "time": 19.8299298286438,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ]
}