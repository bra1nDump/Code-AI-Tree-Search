{
    "codes": [
        "\n# Solution\n\n# This solution is based on the observation that the problem can be solved using dynamic programming.\n# Let's define $dp[i][j]$ as the number of ways to create a playlist of length $i$ with the last song having genre $j$.\n# Then, we can calculate $dp[i][j]$ as the sum of $dp[i - t_k][k]$ for all $k$ such that $t_k \\le i$ and $k \\neq j$.\n# The answer is the sum of $dp[T][j]$ for all $j$.\n\n# Implementation\n\nn, T = map(int, input().split())\n\nt = [0] * n\ng = [0] * n\n\nfor i in range(n):\n    t[i], g[i] = map(int, input().split())\n\ndp = [[0] * 4 for _ in range(T + 1)]\n\nfor i in range(1, T + 1):\n    for j in range(1, 4):\n        for k in range(n):\n            if t[k] <= i and g[k] != j:\n                dp[i][j] += dp[i - t[k]][g[k]]\n\nans = 0\n\nfor i in range(1, 4):\n    ans += dp[T][i]\n\nprint(ans % (10 ** 9 + 7))"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 6.543990135192871,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}