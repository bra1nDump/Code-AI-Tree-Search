{
    "codes": [
        "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, sys.stdin.readline().split())))\n    print(solve(n, T, songs))\n\ndef solve(n, T, songs):\n    # dp[i][j][k] = number of ways to make a playlist of length i with last song of genre j and last song of length k\n    dp = [[[0 for _ in range(16)] for _ in range(4)] for _ in range(T+1)]\n    dp[0][0][0] = 1\n    for i in range(1, T+1):\n        for j in range(1, 4):\n            for k in range(1, 16):\n                for song in songs:\n                    if song[0] == k and song[1] == j:\n                        for l in range(1, 4):\n                            for m in range(1, 16):\n                                if i - k >= 0:\n                                    dp[i][j][k] += dp[i-k][l][m]\n    ans = 0\n    for j in range(1, 4):\n        for k in range(1, 16):\n            ans += dp[T][j][k]\n    return ans % (10**9 + 7)\n\nif True:\n    main()"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 6.4843621253967285,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}