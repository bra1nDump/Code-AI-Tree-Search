{
    "codes": [
        "\nn, T = map(int, input().split())\n\n# we need to find all combinations of n songs that add up to exactly T minutes\n# and are unique\n\n# there are 3^n possible combinations, but we need just the ones that add up to\n# T minutes\n\n# This is the same as the coin change problem, except we have 3 different coins\n# of different values. We need to find the number of ways to make a change of T\n# units using the coins 1, 2, and 3.\n\n# we can use a bottom up approach to build the table\n\n# we need to find all combinations of n songs that add up to exactly T minutes\n# and are unique\n\n# there are 3^n possible combinations, but we need just the ones that add up to\n# T minutes\n\n# This is the same as the coin change problem, except we have 3 different coins\n# of different values. We need to find the number of ways to make a change of T\n# units using the coins 1, 2, and 3.\n\n# we can use a bottom up approach to build the table\n\n# initialize table\ntable = [[0 for i in range(T+1)] for j in range(n)]\n\n# base case:\n# 1 way to make change for 0, regardless of number of coins\nfor i in range(n):\n    table[i][0] = 1\n\n# iterate through each row (each coin)\nfor i in range(n):\n\n    # iterate through each column (each change value)\n    for j in range(T+1):\n\n        # number of ways to make change for j, using i coins is equal to\n        # number of ways to make change for j, using i coins, plus\n        # number of ways to make change for j-value of coin, using i-1 coins\n        if i > 0:\n            table[i][j] = table[i-1][j]\n        if j >= 1:\n            table[i][j] += table[i][j-1]\n\n\nprint(table[-1][-1])"
    ],
    "rewards": [
        0.01818181818181818
    ],
    "train rewards": [
        0.16666666666666666
    ],
    "time": 8.488569736480713,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ]
}