{
    "codes": [
        "\n\ndef solve(n, T, t_g_list):\n    dp = [[[0 for _ in range(3)] for _ in range(T + 1)] for _ in range(n + 1)]\n    dp[0][0][0] = 1\n\n    # t_g_list.sort(key=lambda x: x[0])\n    for i in range(1, n + 1):\n        for j in range(T + 1):\n            if j < t_g_list[i - 1][0]:\n                dp[i][j] = dp[i - 1][j]\n            else:\n                for k in range(3):\n                    if k == t_g_list[i - 1][1] - 1:\n                        continue\n                    dp[i][j][k] += dp[i - 1][j][k]\n                    dp[i][j][t_g_list[i - 1][1] - 1] += dp[i - 1][j - t_g_list[i - 1][0]][k]\n\n    return sum(dp[-1][-1]) % 1000000007\n\n\ndef main():\n    n, T = [int(x) for x in input().split()]\n    t_g_list = []\n    for _ in range(n):\n        t, g = [int(x) for x in input().split()]\n        t_g_list.append((t, g))\n    print(solve(n, T, t_g_list))\n\n\nif True:\n    main()"
    ],
    "rewards": [
        0.45454545454545453
    ],
    "train rewards": [
        0.42592592592592593
    ],
    "time": 7.583674907684326,
    "sample times": 2,
    "test_rewards": [
        [
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}