{
    "codes": [
        "\nimport sys\nimport math\n\n# f_rec(n, m, k, d) - number of valid sequences of length n, \n# with m songs, last song of type k, and total duration d\nf_rec = {}\n\ndef f(n, m, k, d):\n    if n == 0:\n        if d == 0:\n            return 1\n        else:\n            return 0\n    elif f_rec.get((n, m, k, d)) != None:\n        return f_rec.get((n, m, k, d))\n    else:\n        total = 0\n        for i in range(1, m+1):\n            if song_duration[i-1] <= d:\n                if song_genres[i-1] == k:\n                    total += f(n-1, m, k, d-song_duration[i-1])\n                else:\n                    total += f(n-1, m, song_genres[i-1], d-song_duration[i-1])\n        f_rec[(n, m, k, d)] = total\n        return total\n\ndef main():\n    reader = (map(int, line.split()) for line in sys.stdin)\n    num_songs, total_duration = next(reader)\n    global song_duration, song_genres\n    song_duration = []\n    song_genres = []\n    for _ in range(num_songs):\n        duration, genre = next(reader)\n        song_duration.append(duration)\n        song_genres.append(genre)\n    print(f(num_songs, num_songs, 0, total_duration) % (10**9 + 7))\n\nif True:\n    main()"
    ],
    "rewards": [
        0.3090909090909091
    ],
    "train rewards": [
        0.35185185185185186
    ],
    "time": 6.849287033081055,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}