{
    "codes": [
        "\n\n\ndef find_paths(n, T, dp):  # dp[n][T] = dp[n-1][T-ti] + dp[n-1][T]-ti\n    if dp[n][T] != -1:\n        return dp[n][T]\n    if n == 0 and T > 0:\n        return 0\n    if T == 0:\n        return 1\n    if n > 0 and T >= 0:\n        dp[n][T] = find_paths(n - 1, T, dp) + find_paths(n, T - 1, dp)\n    return dp[n][T]\n\n\ndef find_ways(n, T, t, dp):\n    if dp[n][T] != -1:\n        return dp[n][T]\n    if n == 0 and T > 0:\n        return 0\n    if T == 0:\n        return 1\n    if n > 0 and T > 0:\n        dp[n][T] = find_paths(n - 1, T, dp)\n        if T >= t[n]:\n            dp[n][T] -= find_paths(n - 1, T - t[n], dp)\n    return dp[n][T]\n\n\ndef find_songs(n, T, t, g, dp):\n    if dp[n][T] != -1:\n        return dp[n][T]\n    if n == 0 and T > 0:\n        return 0\n    if T == 0:\n        return 1\n    if n > 0 and T > 0:\n        if g[n] != g[n - 1]:\n            dp[n][T] = find_ways(n - 1, T, t, dp)\n        if T >= t[n]:\n            if g[n] != g[n - 1]:\n                dp[n][T] += find_ways(n - 1, T - t[n], t, dp)\n            else:\n                dp[n][T] = find_ways(n - 1, T - t[n], t, dp)\n    return dp[n][T]\n\n\ndef find_ans(n, T, t, g, dp):\n    if dp[n][T] != -1:\n        return dp[n][T]\n    if n == 0 and T > 0:\n        return 0\n    if T == 0:\n        return 1\n    if n > 0 and T > 0:\n        dp[n][T] = find_songs(n - 1, T, t, g, dp)\n        if T >= t[n]:\n            dp[n][T] += find_songs(n - 1, T - t[n], t, g, dp)\n    return dp[n][T]\n\n\ndef main():\n    n, T = map(int, input().split())\n    t = [0 for _ in range(n + 1)]\n    g = [0 for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        t[i], g[i] = map(int, input().split())\n    dp = [[-1 for _ in range(T + 1)] for _ in range(n + 1)]\n    print(find_ans(n, T, t, g, dp))\n\n\nif True:\n    main()"
    ],
    "rewards": [
        0.05454545454545454
    ],
    "train rewards": [
        0.4444444444444444
    ],
    "time": 16.083549737930298,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}