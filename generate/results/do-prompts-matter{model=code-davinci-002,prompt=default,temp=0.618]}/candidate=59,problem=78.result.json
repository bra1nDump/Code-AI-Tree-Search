{
    "codes": [
        "\nimport sys\n\ndef get_answer(n, t, durations, genres):\n    dp = [[[0 for x in range(t + 1)] for y in range(n + 1)] for z in range(4)]\n    for i in range(1, n + 1):\n        for j in range(1, t + 1):\n            dp[genres[i]][i][j] = dp[genres[i]][i - 1][j]\n            if j - durations[i] >= 0:\n                dp[genres[i]][i][j] += dp[genres[i]][i - 1][j - durations[i]]\n            if genres[i] != genres[i - 1]:\n                dp[genres[i]][i][j] += dp[genres[i - 1]][i - 1][j - durations[i]]\n    return dp[3][n][t]\n\n\n# n, t = map(int, sys.stdin.readline().split())\n# durations = [0]\n# genres = [0]\n# for i in range(n):\n#     line = list(map(int, sys.stdin.readline().split()))\n#     durations.append(line[0])\n#     genres.append(line[1])\n# print(get_answer(n, t, durations, genres))\n\n\"\"\"\nTests\n\"\"\"\n\ndef test_get_answer():\n    assert get_answer(3, 3, [0, 1, 1, 1], [0, 1, 2, 3]) == 6\n    assert get_answer(3, 3, [0, 1, 1, 1], [0, 1, 1, 3]) == 2\n    assert get_answer(4, 10, [0, 5, 2, 3, 5], [0, 3, 1, 2, 1]) == 10"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.0
    ],
    "time": 8.406166076660156,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ]
}