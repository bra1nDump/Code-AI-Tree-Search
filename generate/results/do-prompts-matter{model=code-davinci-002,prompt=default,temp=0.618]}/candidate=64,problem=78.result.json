{
    "codes": [
        "\nimport sys\nfrom collections import defaultdict\n\n\ndef inp():\n    return sys.stdin.readline().strip()\n\n\ndef solve(n, t, songs):\n    # dp[i][j][k]: # of ways to make playlist of length i, ending with song of genre k\n    dp = [[[0 for _ in range(4)] for _ in range(t+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        dp[i][0][0] = 1\n    for i in range(1, n+1):\n        for j in range(1, t+1):\n            for k in range(4):\n                if j - songs[i][0] >= 0:\n                    dp[i][j][k] = (dp[i-1][j][k] + dp[i-1][j-songs[i][0]][songs[i][1]]) % 1000000007\n                else:\n                    dp[i][j][k] = dp[i-1][j][k]\n    return dp[n][t][0]\n    \n\ndef main():\n    n, t = [int(x) for x in inp().split()]\n    songs = [[0, 0]]\n    for i in range(n):\n        songs.append([int(x) for x in inp().split()])\n    print(solve(n, t, songs))\n\n\nif True:\n    main()"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 6.519207000732422,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}