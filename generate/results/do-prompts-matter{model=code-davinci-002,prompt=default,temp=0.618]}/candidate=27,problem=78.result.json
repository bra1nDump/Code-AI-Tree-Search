{
    "codes": [
        "\n# Solution 1\n\"\"\"\nn, t = map(int, input().split())\nsongs = []\nfor i in range(n):\n    t_i, g_i = map(int, input().split())\n    songs.append((t_i, g_i))\n\n# dp[i][j] = number of ways to construct playlist with total duration j using songs up to (and including) i\ndp = [[0] * (t + 1) for i in range(n)]\ndp[0][songs[0][0]] = 1\nfor i in range(1, n):\n    for j in range(1, t + 1):\n        dp[i][j] = dp[i - 1][j]\n        if j - songs[i][0] >= 0 and dp[i - 1][j - songs[i][0]] != 0:\n            dp[i][j] += dp[i - 1][j - songs[i][0]]\n            if songs[i][1] == songs[i - 1][1]:\n                dp[i][j] -= dp[i - 1][j - songs[i][0]]\n\nprint(dp[n - 1][t])\n\"\"\"\n\n# Solution 2\n\"\"\"\nn, t = map(int, input().split())\nsongs = []\nfor i in range(n):\n    t_i, g_i = map(int, input().split())\n    songs.append((t_i, g_i))\n\n# dp[i][j][k] = number of ways to construct playlist with total duration j using songs up to (and including) i,\n# where k is the last song's genre\ndp = [[[0] * 4 for j in range(t + 1)] for i in range(n)]\nfor i in range(1, 4):\n    dp[0][songs[0][0]][i] = 1\nfor i in range(1, n):\n    for j in range(1, t + 1):\n        for k in range(1, 4):\n            dp[i][j][k] = dp[i - 1][j][k]\n            if j - songs[i][0] >= 0 and dp[i - 1][j - songs[i][0]][k] != 0:\n                dp[i][j][songs[i][1]] += dp[i - 1][j - songs[i][0]][k]\n\nprint(dp[n - 1][t][1] + dp[n - 1][t][2] + dp[n - 1][t][3])\n\"\"\"\n\n# Solution 3\n\"\"\"\nn, t = map(int, input().split())\nsongs = []\nfor i in range(n):\n    t_i, g_i = map(int, input().split())\n    songs.append((t_i, g_i))\n\n# dp[i][j] = number of ways to construct playlist with total duration j using songs up to (and including) i\ndp = [[0] * (t + 1) for i in range(n)]\ndp[0][songs[0][0]] = 1\nfor i in range(1, n):\n    for j in range(1, t + 1):\n        dp[i][j] = dp[i - 1][j]\n        if j - songs[i][0] >= 0 and dp[i - 1][j - songs[i][0]] != 0:\n            dp[i][j] += dp[i - 1][j - songs[i][0]]\n\nprint(dp[n - 1][t])\n\"\"\"\n\n# Solution 4\n\"\"\"\nn, t = map(int, input().split())\nsongs = []\nfor i in range(n):\n    t_i, g_i = map(int, input().split())\n    songs.append((t_i, g_i))\n\n# dp[i][j] = number of ways to construct playlist with total duration j using songs up to (and including) i\ndp = [[0] * (t + 1) for i in range(n)]\ndp[0][songs[0][0]] = 1\nfor i in range(1, n):\n    for j in range(1, t + 1):\n        dp[i][j] = dp[i - 1][j]"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.0
    ],
    "time": 18.85525107383728,
    "sample times": 2,
    "test_rewards": [
        []
    ],
    "train_rewards": [
        []
    ]
}