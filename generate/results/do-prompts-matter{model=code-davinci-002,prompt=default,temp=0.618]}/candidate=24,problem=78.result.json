{
    "codes": [
        "\nclass Solution:\n    def solve(self, n, T, songs):\n        \"\"\"\n        :type n: int\n        :type T: int\n        :type songs: List[List[int]]\n        :rtype: int\n        \"\"\"\n        dp = [[[0 for __ in range(3)] for ___ in range(T+1)] for ____ in range(n+1)]\n        if songs[0][0] == 1:\n            for i in range(1,4):\n                if i != songs[0][1]:\n                    dp[1][1][i-1] = 1\n            dp[1][1][songs[0][1]-1] = 0\n        else:\n            dp[1][1][songs[0][1]-1] = 1\n        \n        for i in range(2, n+1):\n            t = songs[i-1][0]\n            g = songs[i-1][1]\n            for j in range(1, T+1):\n                for k in range(3):\n                    if k+1 != g:\n                        dp[i][j][k] = dp[i-1][j][k]\n                    if j >= t:\n                        dp[i][j][g-1] += dp[i-1][j-t][k]\n        return sum(dp[n][T]) % 1000000007\n\n\nif True:\n    n, T = map(int, input().strip().split())\n    songs = []\n    for _ in range(n):\n        songs.append(list(map(int, input().strip().split())))\n    s = Solution()\n    result = s.solve(n, T, songs)\n    print(result)"
    ],
    "rewards": [
        0.38181818181818183
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 6.153726816177368,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}