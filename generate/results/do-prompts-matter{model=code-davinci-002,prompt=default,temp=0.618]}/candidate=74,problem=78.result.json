{
    "codes": [
        "\nimport sys\n# import math\n# import collections\n# import itertools\n\n# def do_something(x):\n#     return x\n\n# def main():\n#     sys.setrecursionlimit(100000)\n#     reader = (int(x) for x in sys.stdin.read().split())\n#     n, T = next(reader), next(reader)\n#     a = [next(reader) for i in range(n)]\n#     print(do_something(x))\n#     return 0\n\n# if True:\n#     main()\n\ndef t(n, T, dp):\n    if n < 1 or T < 0:\n        return 0\n    if T == 0:\n        return 1\n\n    if dp[n][T] is not None:\n        return dp[n][T]\n\n    dp[n][T] = 0\n    for i in range(1, 4):\n        dp[n][T] += t(n-1, T-i, dp)\n    dp[n][T] = dp[n][T] % 1000000007\n\n    return dp[n][T]\n\ndef main():\n    sys.setrecursionlimit(100000)\n    reader = (int(x) for x in sys.stdin.read().split())\n    n, T = next(reader), next(reader)\n    a = [next(reader) for i in range(n)]\n    dp = [[None for i in range(T+1)] for j in range(n+1)]\n    print(t(n, T, dp))\n    return 0\n\nif True:\n    main()"
    ],
    "rewards": [
        0.2909090909090909
    ],
    "train rewards": [
        0.18518518518518517
    ],
    "time": 7.63369083404541,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ]
}