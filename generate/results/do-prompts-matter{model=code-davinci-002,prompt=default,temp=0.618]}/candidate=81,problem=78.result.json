{
    "codes": [
        "\ndef main():\n    n, T = map(int, input().split())\n    songs = []\n    for _ in range(n):\n        songs.append(list(map(int, input().split())))\n\n    # dp[i][j][k] = number of ways to get to the i-th song with a total duration of j minutes ending with the k-th genre\n    # dp[i][j][k] = sum(dp[i-1][j-t][l]) for all l != k\n    dp = [[[0]*4 for _ in range(T+1)] for _ in range(n+1)]\n    dp[0][0][0] = 1\n\n    for i in range(1, n+1):\n        for j in range(T+1):\n            for k in range(4):\n                if j < songs[i-1][0]:\n                    continue\n                for l in range(1, 4):\n                    if l == k:\n                        continue\n                    dp[i][j][k] += dp[i-1][j-songs[i-1][0]][l]\n\n    ans = 0\n    for j in range(T+1):\n        for k in range(4):\n            ans += dp[n][j][k]\n\n    return ans\n\nprint(main())"
    ],
    "rewards": [
        0.43636363636363634
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 4.76374888420105,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}