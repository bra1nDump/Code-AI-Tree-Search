{
    "codes": [
        "from sys import stdin\nfrom collections import defaultdict\n\ndef main():\n    n, t = map(int, stdin.readline().split())\n    songs = defaultdict(lambda: 0)\n    for i in range(n):\n        song_time, song_genre = map(int, stdin.readline().split())\n        songs[(song_time, song_genre)] += 1\n\n    if t < 2 or n < 2 or t > (3 * n):\n        return 0\n\n    # dp_table[genre][time] = number of ways\n    dp_table = [[0] * (t + 1) for i in range(4)]\n    dp_table[0][0] = 1\n    dp_table[1][0] = 1\n    dp_table[2][0] = 1\n    dp_table[3][0] = 1\n\n    for song_time, song_genre in songs.keys():\n        for time in range(t + 1):\n            if time - song_time >= 0:\n                # can add song\n                dp_table[song_genre][time] += dp_table[song_genre - 1][time - song_time]\n                for genre in range(1, 4):\n                    if genre != song_genre:\n                        dp_table[song_genre][time] += dp_table[genre][time - song_time]\n\n    return dp_table[3][t] % (10 ** 9 + 7)\n\nprint(main())"
    ],
    "rewards": [
        0.45454545454545453
    ],
    "train rewards": [
        0.3888888888888889
    ],
    "time": 5.4145731925964355,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}