{
    "codes": [
        "\n\nclass Song:\n    def __init__(self, duration, genre):\n        self.duration = duration\n        self.genre = genre\n\n    def __repr__(self):\n        return \"{} {}\".format(self.duration, self.genre)\n\n\ndef get_sequences(songs, time):\n    num_sequences = 0\n    for song in songs:\n        if time - song.duration > 0:\n            new_songs = list(filter(lambda s: s.duration <= time and s.genre != song.genre, songs))\n            num_sequences += get_sequences(new_songs, time - song.duration)\n        if time - song.duration == 0:\n            num_sequences += 1\n    return num_sequences\n\n\ndef main():\n    num_songs, time = [int(x) for x in input().strip().split()]\n    songs = []\n    for i in range(num_songs):\n        duration, genre = [int(x) for x in input().strip().split()]\n        songs.append(Song(duration, genre))\n    print(get_sequences(songs, time))\n\n\nif True:\n    main()"
    ],
    "rewards": [
        0.6181818181818182
    ],
    "train rewards": [
        0.7962962962962963
    ],
    "time": 5.936935186386108,
    "sample times": 2,
    "test_rewards": [
        [
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true
        ]
    ]
}