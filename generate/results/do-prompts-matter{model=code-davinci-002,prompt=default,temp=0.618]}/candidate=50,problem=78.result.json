{
    "codes": [
        "\n# This solution is based on the solution to the problem \"Polycarpus and a playlist\"\n# Link: https://codeforces.com/contest/1095/submission/45230143\n\n\ndef solve(n, t, songs):\n    # Initialize DP table\n    dp = [[[0 for _ in range(t+1)] for _ in range(3)] for _ in range(n+1)]\n\n    # Base case\n    for i in range(3):\n        dp[0][i][0] = 1\n\n    # Recurrence relation\n    for i in range(1, n+1):\n        for j in range(t+1):\n            for k in range(3):\n                if songs[i-1][0] <= j:\n                    if songs[i-1][1] == k:\n                        dp[i][k][j] = dp[i-1][k][j-songs[i-1][0]]\n                    else:\n                        dp[i][k][j] = dp[i-1][k][j] + dp[i-1][songs[i-1][1]][j-songs[i-1][0]]\n\n    return dp[n][0][t]\n\n\ndef main():\n    n, t = map(int, input().split())\n    songs = [[0 for _ in range(2)] for _ in range(n)]\n    for i in range(n):\n        songs[i] = list(map(int, input().split()))\n\n    print(solve(n, t, songs))\n\n\nif True:\n    main()"
    ],
    "rewards": [
        0.16363636363636364
    ],
    "train rewards": [
        0.16666666666666666
    ],
    "time": 7.297148942947388,
    "sample times": 2,
    "test_rewards": [
        []
    ],
    "train_rewards": [
        []
    ]
}