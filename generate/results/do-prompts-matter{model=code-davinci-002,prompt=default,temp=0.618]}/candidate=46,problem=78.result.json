{
    "codes": [
        "\ndef calc_songs(song_num, total_time, songs, cache):\n    if total_time == 0:\n        return 1\n    if song_num == 0:\n        return 0\n    if (song_num, total_time) in cache:\n        return cache[(song_num, total_time)]\n    if songs[song_num][0] > total_time:\n        return calc_songs(song_num - 1, total_time, songs, cache)\n    count = 0\n    # Don't use this song\n    count += calc_songs(song_num - 1, total_time, songs, cache)\n    # Use this song\n    count += calc_songs(song_num - 1, total_time - songs[song_num][0], songs, cache)\n    cache[(song_num, total_time)] = count\n    return count\n\ndef main():\n    n, t = map(int, input().split())\n    songs = [0]\n    for i in range(n):\n        d, g = map(int, input().split())\n        songs.append((d, g))\n    cache = {}\n    print(calc_songs(n, t, songs, cache))\n\nif True:\n    main()"
    ],
    "rewards": [
        0.45454545454545453
    ],
    "train rewards": [
        0.5925925925925926
    ],
    "time": 5.240016222000122,
    "sample times": 2,
    "test_rewards": [
        [
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true
        ]
    ]
}