{
    "codes": [
        "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n\n    # Get input\n    line = sys.stdin.readline().strip().split()\n    songs = []\n    for _ in range(int(line[0])):\n        songs.append([int(value) for value in sys.stdin.readline().strip().split()])\n\n    # Calculate\n    result = 0\n    cache = {}\n    for i in range(len(songs)):\n        for j in range(len(songs)):\n            if i != j:\n                result += calculate(songs, i, j, int(line[1]), cache)\n    print(result)\n\ndef calculate(songs, i, j, time_left, cache):\n    \"\"\"\n    Calculate the number of valid playlists.\n    \"\"\"\n\n    # Validate\n    if (i, j, time_left) in cache.keys():\n        return cache[(i, j, time_left)]\n    if time_left < 0:\n        return 0\n\n    # Base cases\n    if time_left == 0:\n        return 1\n    if i == j and songs[i][0] == time_left:\n        return 1\n    if i == j and songs[i][0] != time_left:\n        return 0\n\n    # Recursive cases\n    result = 0\n    for k in range(len(songs)):\n        if k != i and k != j and songs[k][1] != songs[j][1]:\n            result += calculate(songs, j, k, time_left - songs[j][0], cache)\n    cache[(i, j, time_left)] = result\n    return result\n\nif True:\n    main()"
    ],
    "rewards": [
        0.14545454545454545
    ],
    "train rewards": [
        0.42592592592592593
    ],
    "time": 6.620952844619751,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}