{
    "codes": [
        "\ndef get_playlist_count(n, T, songs):\n    # songs is a list of tuples (duration, genre)\n    # n is number of songs\n    # T is total duration\n    # return number of playlists of n songs with duration T\n\n    # dp[i][j][k] is the number of playlists of length i with duration j ending in genre k\n    dp = [[[0 for i in range(4)] for j in range(T+1)] for k in range(n+1)]\n    for i in range(4):\n        dp[1][songs[0][0]][i] = 1\n    for i in range(2, n+1):\n        for j in range(1, T+1):\n            for k in range(1, 4):\n                if j >= songs[i-1][0]:\n                    dp[i][j][k] = (dp[i-1][j-songs[i-1][0]][k] + dp[i-1][j][k-1] + dp[i-1][j-songs[i-1][0]][k-1]) % 1000000007\n                else:\n                    dp[i][j][k] = (dp[i-1][j][k-1]) % 1000000007\n    return dp[n][T][3]\n\ndef main():\n    n, T = [int(i) for i in input().split()]\n    songs = []\n    for i in range(n):\n        t, g = [int(i) for i in input().split()]\n        songs.append((t, g))\n    print(get_playlist_count(n, T, songs))\n\nif True:\n    main()"
    ],
    "rewards": [
        0.4
    ],
    "train rewards": [
        0.46296296296296297
    ],
    "time": 6.473711729049683,
    "sample times": 2,
    "test_rewards": [
        []
    ],
    "train_rewards": [
        []
    ]
}