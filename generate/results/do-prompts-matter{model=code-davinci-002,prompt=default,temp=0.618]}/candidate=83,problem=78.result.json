{
    "codes": [
        "\nimport sys\n\n\ndef solve(n, t, songs):\n    max_duration = max(songs[:, 0])\n    if t < max_duration:\n        return 0\n    n_genres = max(songs[:, 1])\n    dp = [[0] * (t + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, t + 1):\n            dp[i][j] = dp[i - 1][j]\n            if j >= songs[i - 1][0]:\n                dp[i][j] += dp[i - 1][j - songs[i - 1][0]]\n                if songs[i - 1][1] == 1:\n                    dp[i][j] += 1\n                elif songs[i - 1][1] == 2 and j - songs[i - 1][0] > 0:\n                    dp[i][j] += dp[i - 1][j - songs[i - 1][0] - 1]\n                elif songs[i - 1][1] == 3 and j - songs[i - 1][0] > 1:\n                    dp[i][j] += dp[i - 1][j - songs[i - 1][0] - 2]\n    return dp[n][t]\n\n\ndef main():\n    stdin = sys.stdin\n    n, t = [int(x) for x in stdin.readline().split()]\n    songs = [[int(x) for x in stdin.readline().split()] for _ in range(n)]\n    songs = np.array(songs, dtype=np.int32)\n    print(solve(n, t, songs))\n\n\nif True:\n    main()"
    ],
    "rewards": [
        0.07272727272727272
    ],
    "train rewards": [
        0.3333333333333333
    ],
    "time": 10.101891040802002,
    "sample times": 2,
    "test_rewards": [
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}