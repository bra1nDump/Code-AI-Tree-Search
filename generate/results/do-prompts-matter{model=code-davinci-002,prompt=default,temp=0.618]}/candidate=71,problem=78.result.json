{
    "codes": [
        "\nimport sys\n\ndef solve(n, t, l):\n    from collections import defaultdict\n    from functools import lru_cache\n\n    d = defaultdict(dict)\n\n    for i, (dur, gen) in enumerate(l):\n        d[dur][gen] = i\n\n    @lru_cache(maxsize=None)\n    def dfs(i, last_dur, last_gen, curr_t):\n        if curr_t == t:\n            return 1\n\n        if curr_t > t:\n            return 0\n\n        ans = 0\n\n        for dur in d:\n            if dur > t - curr_t:\n                continue\n\n            if dur == last_dur:\n                continue\n\n            for gen in d[dur]:\n                if gen == last_gen:\n                    continue\n\n                ans += dfs(d[dur][gen], dur, gen, curr_t + dur)\n\n        return ans\n\n    return dfs(-1, -1, -1, 0)\n\ndef main():\n    n, t = list(map(int, sys.stdin.readline().split()))\n    l = []\n    for _ in range(n):\n        dur, gen = list(map(int, sys.stdin.readline().split()))\n        l.append((dur, gen))\n\n    ans = solve(n, t, l)\n    print(ans)\n\nif True:\n    main()"
    ],
    "rewards": [
        0.4
    ],
    "train rewards": [
        0.5185185185185185
    ],
    "time": 6.324095010757446,
    "sample times": 2,
    "test_rewards": [
        [
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
        ]
    ],
    "train_rewards": [
        [
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false
        ]
    ]
}