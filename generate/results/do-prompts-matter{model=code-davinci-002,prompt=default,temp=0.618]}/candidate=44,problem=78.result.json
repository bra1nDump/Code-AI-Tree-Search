{
    "codes": [
        "\nimport sys\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\ndef read_tuple():\n    return tuple(read_ints())\n\ndef read_int():\n    return read_ints()[0]\n\ndef main():\n    n, T = read_tuple()\n    songs = list()\n    for i in range(n):\n        songs.append(read_tuple())\n    \n    # dp[i][j][k] = number of ways to get to T minutes with i songs, last song is j, last song was of genre k\n    # for k in range(4):\n    #     dp[0][0][k] = 0\n    #     dp[0][1][k] = 0\n    #     dp[0][2][k] = 0\n    #     dp[0][3][k] = 0\n    # dp[0][0][0] = 1\n    dp = [[[0] * 4 for _ in range(4)] for _ in range(T + 1)]\n    dp[0][0][0] = 1\n\n    for i in range(T):\n        for j in range(n):\n            for k in range(4):\n                if k != 0:\n                    dp[i + 1][j][k] = (dp[i + 1][j][k] + dp[i][j][k - 1]) % (10 ** 9 + 7)\n                if k != songs[j][1]:\n                    dp[i + 1][j][k] = (dp[i + 1][j][k] + dp[i][j][k]) % (10 ** 9 + 7)\n                if i + 1 >= songs[j][0]:\n                    dp[i + 1][j][songs[j][1]] = (dp[i + 1][j][songs[j][1]] + dp[i + 1 - songs[j][0]][j][k]) % (10 ** 9 + 7)\n\n    print(sum(dp[T][i][0] for i in range(n)))\n\ndef test():\n    assert(main() == None)\n\nif True:\n    test()"
    ],
    "rewards": [
        0.0
    ],
    "train rewards": [
        0.1111111111111111
    ],
    "time": 10.76793098449707,
    "sample times": 2,
    "test_rewards": [
        []
    ],
    "train_rewards": [
        []
    ]
}